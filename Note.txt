composer require twig
composer require symfony/maker-bundle --dev
composer require doctrine/annotations
bin/console make:controller
composer require symfony/apache-pack

composer require symfony/asset

composer require symfony/webpack-encore-bundle
./node_modules/.bin/encore production
./node_modules/.bin/encore dev --watch

composer require orm

bin/console make:entity
 > Category
 have property subcategories
    > type : relation
    > relation type : OneToMany
    > field inside Category : parent

plural @ORM\Table(name="categories")

bin/console doctrine:database:create

bin/console make:migration

bin/console doctrine:migrations:migrate

composer require orm-fixtures --dev
bin/console make:fixture
    > CategoryFixtures
bin/console doctrine:fixture:load

bin/console doctrine:schema:drop -n -q --force --full-database && rm migrations/*.php && bin/console make:migration && bin/console doctrine:migrations:migrate -n -q
bin/console doctrine:fixture:load

bin/console make:twig-extension
    > AppExtension

composer require symfony/var-dumper --dev
composer require symfony/profiler-pack --dev
composer require symfony/debug-bundle --dev

// for autowire paramater in controller
composer require sensio/framework-extra-bundle

composer require form validator
    > bin/console make:form

composer require --dev phpunit/phpunit symfony/test-pack
bin/console make:unit-test
    SluggerTest


########## run tests.sh #########
    ./tests.sh
        test with specific folder
    ./tests.sh folder-test
        test with specific folder and rebuild database
    ./tests.sh folder-test -db

bin/console make:functional-test
    AdminControllerCategoriesTest

bin/console make:fixtures VideoFixtures

# bundle for paginator
composer require knplabs/knp-paginator-bundle

 composer require symfony/translation

###################security##################
composer require security
./bin/console make:user
./bin/console make:entity User

###################security check##################
composer require sensiolabs/security-checker
bin/console security:check
    composer update # for update all package

bin/console make:form
    UserType

# bundle for datetime pipe in twig
composer require knplabs/knp-time-bundle

# Note: use package dama/doctrine-test-bundle for rollback transaction database in unit test
composer require --dev dama/doctrine-test-bundle

# default symfony will create table "video_user" for "usersThatLike", to change table name use @ORM\JoinTable(name="likes")

./node_modules/.bin/encore production
./node_modules/.bin/encore dev --watch

############################# COUNT with HIDDEN ##############################################3
COUNT(l) AS HIDDEN likes => flat array, if not use "HIDDEN" we will have array in array
        $q = $dbquery->getQuery();
        dump($q->getResult());


public function check()
    {
        if($this->isSubscriptionValid)
        {
            return null;
        }
        else
        {
            static $video = Video::videoForNotLoggedInOrNoMembers; // $video is create only one with every call to check()
            return $video;
        }
    }

########################### REDIS ####################################
sudo apt install redis-server
sudo apt install php-redis # specify sersion if needed. Ex: php7.2-redis
sudo nano /etc/redis/redis.conf
    maxmemory 128mb
    maxmemory-policy allkeys-lru

sudo systemctl enable redis-server@.service
sudo service apache2 restart

######################## Form convention #################################
<label for="user_last_name">Last name</label>
{{ form_widget(form.last_name, {'attr':{'class': is_invalid}}) }}
=> important : user_last_name

take a look inside for set default in formtype :
$resolver->setDefaults([
            'data_class' => User::class,
            'user' => null
        ]);

######################## upload file #################################
composer require symfony/filesystem

====================== Security =====================
to use tag: @Security("user.getId() == comment.getUser().getId()"), install:
composer require symfony/expression-language

===========================send mail with swift mailer==========================================
composer require symfony/swiftmailer-bundle
simulate send mail by update config ( from swiftmailer prod to dev ) :
swiftmailer:
  url: '%env(MAILER_URL)%'
  spool:
    type: file
    path: '%kernel.project_dir%/var/spool'
send mail command:
./bin/console swiftmailer:spool:send --message-limit=10 --env=prod

=========================== cache ==========================================
composer require symfony/cache

Redis clear cache
redis-cli FLUSHALL
File clear cache
./bin/console cache:clear

bin/console make:subscriber

// to be able to test database queries count
$client->enableProfiler();
$client->getProfile()->getCollector('db')->getQueryCount()

=========================== fix doctrine cache deprecated ( Doctrine\Common\Cache\SQLite3Cache; ) ==========================================
https://stackoverflow.com/questions/68462685/sqlite-error-opening-symfony-app-on-heroku

====================== change from mysql to sqlite ==================================
remove file in ./migrations
bin/console make:migration
bin/console doctrine:migrations:migrate
bin/console doctrine:fixtures:load

=========================== remove git cache ===============================
git rm -r --cached .
git status

============================= folow to install heroku ======================
https://devcenter.heroku.com/articles/getting-started-with-php#set-up
sudo snap install heroku --classic
heroku login
heroku create
heroku config:set APP_ENV=heroku
heroku config:set APP_DEBUG=0
heroku config:set APP_SECRET=421347cdbf04480e77884b2f9ed7379b
heroku config:set DATABASE_URL=sqlite:///%kernel.project_dir%/var/data.db
echo 'web: $(composer config bin-dir)/heroku-php-apache2 public/' > Profile
git branch : to see what current branch
git push heroku main